version: 2.1
orbs:
    coveralls: coveralls/coveralls@1.0.6

jobs:
    install-build:
        docker:
            - image: cimg/node:18.9
        resource_class: medium+
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - restore_cache:
                  key: h5p-core-cache1-{{ checksum "scripts/install.sh" }}
            - restore_cache:
                  key: h5p-core-cache2-{{ checksum "scripts/install.sh" }}
            - run: npm ci
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - run: |
                  npm run build --prefix packages/h5p-rest-example-client
                  npm run build --prefix packages/h5p-rest-example-server
                  npm run download:content

            - save_cache:
                  key: h5p-core-cache1-{{ checksum "scripts/install.sh" }}
                  paths:
                      - /mnt/ramdisk/packages/h5p-examples/h5p
            - save_cache:
                  key: h5p-core-cache2-{{ checksum "scripts/install.sh" }}
                  paths:
                      - /mnt/ramdisk/packages/h5p-rest-example-server/h5p
            - save_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
                  paths:
                      - /mnt/ramdisk/test/data/hub-content
            - persist_to_workspace:
                  root: .
                  paths:
                      - node_modules
                      - packages/h5p-examples/build
                      - packages/h5p-examples/h5p
                      - packages/h5p-examples/node_modules
                      - packages/h5p-express/build
                      - packages/h5p-express/node_modules
                      - packages/h5p-html-exporter/build
                      - packages/h5p-html-exporter/node_modules
                      - packages/h5p-mongos3/build
                      - packages/h5p-mongos3/node_modules
                      - packages/h5p-react/build
                      - packages/h5p-react/node_modules
                      - packages/h5p-redis-lock/build
                      - packages/h5p-redis-lock/node_modules
                      - packages/h5p-rest-example-client/build
                      - packages/h5p-rest-example-client/node_modules
                      - packages/h5p-rest-example-server/build
                      - packages/h5p-rest-example-server/h5p
                      - packages/h5p-rest-example-server/node_modules
                      - packages/h5p-server/build
                      - packages/h5p-server/node_modules
                      - packages/h5p-shared-state-server/build
                      - packages/h5p-shared-state-server/node_modules
                      - packages/h5p-webcomponents/build
                      - packages/h5p-webcomponents/node_modules
                      - test/data/content-type-cache/real-content-types.json
                      - test/data/hub-content

    lint:
        docker:
            - image: cimg/node:18.9
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npm run lint

    format:
        docker:
            - image: cimg/node:18.9
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npm run format:check

    unit-tests:
        docker:
            - image: cimg/node:18.9
              environment:
                  NODE_ENV: development
                  TMPDIR: /mnt/ramdisk
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npx jest --runInBand --collect-coverage
            - coveralls/upload:
                  parallel: true
                  flag_name: Unit tests

    integration-tests:
        docker:
            - image: cimg/node:18.9
              environment:
                  TMPDIR: /mnt/ramdisk
        resource_class: medium+
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npx jest --config jest.integration.config.js --runInBand --collect-coverage
            - coveralls/upload:
                  parallel: true
                  flag_name: Integration tests

    html-exporter-tests:
        docker:
            - image: cimg/node:18.9-browsers
              environment:
                  TMPDIR: /mnt/ramdisk
        resource_class: medium+
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npx jest --config packages/h5p-html-exporter/jest.config.js --runInBand --collect-coverage
            - coveralls/upload:
                  parallel: true
                  path_to_lcov: ./packages/h5p-html-exporter/coverage/lcov.info
                  flag_name: HTML Exporter Tests

    e2e-tests:
        docker:
            - image: cimg/node:18.9
              environment:
                  TMPDIR: /mnt/ramdisk
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npm run test:e2e

    db-tests:
        docker:
            - image: cimg/node:18.9
            - image: circleci/mongo:latest
              environment:
                  MONGO_INITDB_ROOT_USERNAME: root
                  MONGO_INITDB_ROOT_PASSWORD: h5pnodejs
            - image: minio/minio
              environment:
                  MINIO_ACCESS_KEY: minioaccesskey
                  MINIO_SECRET_KEY: miniosecret
              command: server /data
        steps:
            - checkout
            - attach_workspace:
                  at: .
            - run: npm run test:db -- --collect-coverage
            - coveralls/upload:
                  parallel: true
                  flag_name: DB tests

    push_coveralls:
        docker:
            - image: 'cimg/node:18.9'
        steps:
            - coveralls/upload:
                  parallel_finished: true

    release:
        docker:
            - image: 'cimg/node:18.9'
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            - attach_workspace:
                  at: .
            - run:
                  name: config git
                  command: git config --global user.email "c@Lumi.education" && git config --global user.name "Lumi"
            - run:
                  name: release
                  command: npx lerna version -y --conventional-commits --create-release github && npx lerna publish -y from-package

workflows:
    version: 2
    h5p-nodejs-library:
        jobs:
            - install-build
            - lint:
                  requires:
                      - install-build
            - format:
                  requires:
                      - install-build
            - unit-tests:
                  requires:
                      - install-build
            # - e2e-tests:
            #       requires:
            #           - install-build
            - integration-tests:
                  requires:
                      - install-build
            - db-tests:
                  requires:
                      - install-build
            - html-exporter-tests:
                  requires:
                      - install-build
            - release:
                  filters:
                      branches:
                          only: release
                  requires:
                      - install-build
                      - lint
                      - format
                      - unit-tests
                      - html-exporter-tests
                      # - e2e-tests
                      - integration-tests
                      - db-tests
            - push_coveralls:
                  requires:
                      - install-build
                      - lint
                      - format
                      - unit-tests
                      - html-exporter-tests
                      # - e2e-tests
                      - integration-tests
                      - db-tests
